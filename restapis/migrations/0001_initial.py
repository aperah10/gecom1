# Generated by Django 4.0.3 on 2022-04-12 03:53

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import restapis.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[789]\\d{9}$')])),
                ('fullname', models.CharField(blank=True, max_length=130, null=True, verbose_name='full name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='emailaddress')),
                ('is_phone_verfied', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('date_joined', models.DateField(default=datetime.date.today, verbose_name='date_joined')),
                ('change_pw', models.BooleanField(default=True)),
                ('isCustomer', models.BooleanField(blank=True, default=False, null=True)),
                ('isSeller', models.BooleanField(blank=True, default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Acconts',
                'ordering': ('id',),
            },
            managers=[
                ('objects', restapis.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=130, verbose_name='full name')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[789]\\d{9}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='emailaddress')),
                ('house', models.CharField(blank=True, max_length=300, null=True)),
                ('trade', models.CharField(blank=True, max_length=200, null=True)),
                ('area', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('pinCode', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$')])),
                ('delTime', models.CharField(default='AnyTime', max_length=100)),
                ('state', models.CharField(max_length=200)),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addressuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AllOrder',
            fields=[
                ('date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField()),
                ('shipPrice', models.PositiveIntegerField(default=50)),
                ('totalAmmount', models.PositiveIntegerField(default=0)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accept', 'Accept'), ('Decline', 'Decline')], default='Pendiing', max_length=100)),
                ('selOrderStatus', models.CharField(blank=True, choices=[('Dispatch', 'Dispatch'), ('Shipment', 'Shipment'), ('Arrives at', 'Arrives at'), ('Complete', 'Complete')], default='OrderConfirm', max_length=100, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentOrder',
            fields=[
                ('date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField()),
                ('shipPrice', models.PositiveIntegerField(default=50)),
                ('totalAmmount', models.PositiveIntegerField(default=0)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('orderStatus', models.CharField(blank=True, choices=[('Dispatch', 'Dispatch'), ('Shipment', 'Shipment'), ('Arrives at', 'Arrives at'), ('Complete', 'Complete')], default='OrderConfirm', max_length=100, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobileOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[789]\\d{9}$')])),
                ('otp', models.CharField(max_length=6)),
                ('is_phone_verfied', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=300)),
                ('salesPrice', models.FloatField()),
                ('discountPrice', models.FloatField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('stock', models.PositiveIntegerField()),
                ('pic', models.FileField(blank=True, null=True, upload_to='ProdcutImg')),
                ('offers', models.IntegerField(blank=True, default=1, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.category')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('isCustomer', models.BooleanField(default=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='emailaddress')),
                ('gender', models.CharField(blank=True, max_length=200, null=True)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='CustomerImg')),
                ('upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('isSeller', models.BooleanField(default=False)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='emailaddress')),
                ('gender', models.CharField(blank=True, max_length=200, null=True)),
                ('businesspic', models.ImageField(blank=True, null=True, upload_to='SellerImg')),
                ('businessname', models.CharField(blank=True, max_length=100, null=True)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='SellerImg')),
                ('upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessOrder',
            fields=[
                ('date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField()),
                ('shipPrice', models.PositiveIntegerField(default=50)),
                ('totalAmmount', models.PositiveIntegerField(default=0)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.address')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.profile')),
                ('orderSeller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.currentorder')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.product')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.sellerprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='upload',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.sellerprofile'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('checked', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('recevier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='currentorder',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.profile'),
        ),
        migrations.AddField(
            model_name='currentorder',
            name='orderSeller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.allorder'),
        ),
        migrations.AddField(
            model_name='currentorder',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.product'),
        ),
        migrations.AddField(
            model_name='currentorder',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.sellerprofile'),
        ),
        migrations.CreateModel(
            name='CartProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cartUpload', models.JSONField(default={})),
                ('upload', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CancelOrder',
            fields=[
                ('date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField()),
                ('shipPrice', models.PositiveIntegerField(default=50)),
                ('totalAmmount', models.PositiveIntegerField(default=0)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.address')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.profile')),
                ('orderSeller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.allorder')),
                ('orderUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.currentorder')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.product')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.sellerprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='allorder',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.profile'),
        ),
        migrations.AddField(
            model_name='allorder',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.product'),
        ),
        migrations.AddField(
            model_name='allorder',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restapis.sellerprofile'),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ammount', models.PositiveIntegerField(default=0)),
                ('shipPrice', models.PositiveIntegerField(default=50)),
                ('totalAmmount', models.PositiveIntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapis.product')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('upload', 'product')},
            },
        ),
    ]
